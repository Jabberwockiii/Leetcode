class Solution:
    def areSentencesSimilar(self, sentence1: str, sentence2: str) -> bool:
        s1 = sentence1.split()
        s2 = sentence2.split()
        if(len(s1)>len(s2)):            #let s1 be the smaller and s2 be the greater
            s1,s2 = s2,s1
        while(s1): 
            if(s2[0]==s1[0]):
                s2.pop(0)
                s1.pop(0)
            elif(s2[-1]==s1[-1]):
                s2.pop()
                s1.pop()
            else:
                return(False)            
        return(True)
        
        
        #reflection
        There are three cases in this question, the first case is that The leading elements matches without the odd element with base. 
        The second case is tha the trailding elements matches without the odd element with base 
        The thirdcase is that both the leading and trailing matches but there is odd element. 
        Therefore, we can consider through the odd element 
        By popping the leading or trailing elements, we can see if the comp list will be empty or not. If it is empty, then it all matches. 
        Otherwise, there is some odd element left. 
        
        
        
  
